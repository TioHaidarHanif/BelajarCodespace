# docker-compose.yml
version: '3.8'

services:
  # --- API Gateway (Nginx) ---
  api-gateway:
    image: nginx:alpine
    ports:
      - "80:80" # Akses dari host melalui port 80
    volumes:
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - user-api # Bergantung pada user-service
      - product-api # <-- BARU: Bergantung pada product-api
    deploy:
      replicas: 1 # Cukup 1 replika untuk API Gateway
      restart_policy:
        condition: on-failure

  # --- User API Microservice ---
  user-api:
    build:
      context: ./services/user-service
      dockerfile: Dockerfile
    image: your_docker_username/user-api:1.0 # Ganti 'your_docker_username'
    environment:
      DB_HOST: users_db
      DB_USER: user
      DB_PASSWORD: password
      DB_NAME: user_db
      PORT: 3000
    # ports: # Tidak perlu dipaparkan ke host jika hanya diakses via API Gateway
    #   - "3000:3000"
    depends_on:
      - users_db
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
      resources:
        limits:
          cpus: '0.5'
          memory: 128M

  # --- Product API Microservice ---
  product-api: # <-- BARU: Definisi layanan Product API
    build:
      context: ./services/product-service # Konteks build adalah folder product-service
      dockerfile: Dockerfile # Nama Dockerfile di dalam product-service
    image: your_docker_username/product-api:1.0 # Ganti 'your_docker_username'
    environment:
      DB_HOST: products_db # Nama service database untuk produk
      DB_USER: product_user
      DB_PASSWORD: product_password
      DB_NAME: product_db
      PORT: 3001 # Port internal yang didengarkan oleh Product API
    # ports: # Tidak perlu dipaparkan ke host jika hanya diakses via API Gateway
    #   - "3001:3001"
    depends_on:
      - products_db # Bergantung pada database produk
    deploy:
      replicas: 2 # Jalankan 2 instansi dari product-api
      restart_policy:
        condition: on-failure
      resources:
        limits:
          cpus: '0.5'
          memory: 128M

  # --- Users Database ---
  users_db:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: root_password_user
      MYSQL_DATABASE: user_db
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    volumes:
      - users_db_data:/var/lib/mysql
    deploy:
      replicas: 1 # Database master, biasanya 1 replika
      placement:
        constraints: [node.role == manager]
      restart_policy:
        condition: on-failure

  # --- Products Database ---
  products_db: # <-- BARU: Definisi layanan database Product
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: root_password_product
      MYSQL_DATABASE: product_db
      MYSQL_USER: product_user
      MYSQL_PASSWORD: product_password
    volumes:
      - products_db_data:/var/lib/mysql
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == manager]
      restart_policy:
        condition: on-failure

volumes:
  users_db_data:
  products_db_data: # <-- BARU: Volume persisten untuk database produk